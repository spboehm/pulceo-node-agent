name: Build pulceo-node-agent

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  prepare:
    runs-on: self-hosted
    steps:
      - name: Spin up k3d cluster
        run: /usr/local/bin/k3d cluster create pna-test --api-port 40475 --k3s-arg "--disable=traefik@server:0" --port 80:80@loadbalancer
  build:
    needs: prepare
    env:
      PNA_USERNAME: ${{ secrets.PNA_USERNAME }}
      PNA_PASSWORD: ${{ secrets.PNA_PASSWORD }}
      PNA_INIT_TOKEN: ${{ secrets.PNA_INIT_TOKEN }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Copy k3s.yaml
        run: cp /home/$(whoami)/.kube/config $GITHUB_WORKSPACE/.k3s.yaml
      - name: Bootstrap k3s access
        run: chmod +x ./bootstrap-k3s-access.sh && ./bootstrap-k3s-access.sh
      - name: Set up JDK eclipse-temurin 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21.0.5'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Build with Gradle
        run: ./gradlew build -DPNA_USERNAME=$PNA_USERNAME -DPNA_PASSWORD=$PNA_PASSWORD -DPNA_INIT_TOKEN=$PNA_INIT_TOKEN
  build-and-push-image:
    needs: build
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  teardown:
    if: ${{ always() }}
    needs: [ prepare, build, build-and-push-image ]
    runs-on: self-hosted
    steps:
      - name: Teardown k3d cluster
        run: /usr/local/bin/k3d cluster delete pna-test
