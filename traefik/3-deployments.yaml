apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: traefik-ingress-controller

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: traefik
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --api.insecure
            - --accesslog
            - --entrypoints.web.Address=:7676
            - --entrypoints.websecure.Address=:443
            - --providers.kubernetescrd
            - --certificatesresolvers.myresolver.acme.tlschallenge
            - --certificatesresolvers.myresolver.acme.email=sebastian.boehm@uni-bamberg.de
            - --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            # --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports:
            - name: web
              containerPort: 7676
            - name: websecure
              containerPort: 443

---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: cluster-admin

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin-manual
subjects:
  - kind: ServiceAccount
    name: cluster-admin
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: pulceo-node-agent
  labels:
    app: pulceo-node-agent

spec:
  replicas: 1
  selector:
    matchLabels:
      app: pulceo-node-agent
  template:
    metadata:
      labels:
        app: pulceo-node-agent
    spec:
      serviceAccountName: cluster-admin
      containers:
        - name: pulceo-node-agent
          image: ghcr.io/spboehm/pulceo-node-agent:main
          volumeMounts:
            - mountPath: /.k3s.yaml
              name: k3s
              readOnly: true
          imagePullPolicy: Always
          env:
            - name: PNA_LOCAL_ADDRESS
              value: "0.0.0.0"
            - name: PNA_DELAY_INTERFACE
              value: "eth0"
            - name: K3S_API_SERVER_PORT
              value: "443"
            - name: K3S_API_SERVER_HOST
              value: "10.43.0.1"
            - name: K3S_API_SERVICE_ACCOUNT_TOKEN_PATH
              value: "/var/run/secrets/kubernetes.io/serviceaccount"
            - name: K3S_NODENAME
              value: "pna-k8s-node"
            - name: PNA_MQTT_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: pna-credentials
                  key: PNA_MQTT_BROKER_URL
            - name: PNA_MQTT_CLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: pna-credentials
                  key: PNA_MQTT_CLIENT_USERNAME
            - name: PNA_MQTT_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pna-credentials
                  key: PNA_MQTT_CLIENT_PASSWORD
            - name: PNA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: pna-credentials
                  key: PNA_USERNAME
            - name: PNA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pna-credentials
                  key: PNA_PASSWORD
            - name: PNA_INIT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: pna-credentials
                  key: PNA_INIT_TOKEN
          ports:
            - containerPort: 7676
              name: web
      volumes:
        - name: k3s
          hostPath:
            path: /home/pulceo/.k3s.yaml
            type: File